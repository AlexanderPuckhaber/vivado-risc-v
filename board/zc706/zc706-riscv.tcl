#*****************************************************************************************
# Vivado (TM) v2020.2 (64-bit)
#
# zc706-riscv.tcl: Tcl script for re-creating project 'zc706-riscv'
#
# Generated by Vivado on Tue Jun 29 13:31:45 EDT 2021
# IP Build 3064653 on Wed Nov 18 14:17:31 MST 2020
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (zc706-riscv.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/workspace/rocket64b1/vivado-zc706-riscv/zc706-riscv.srcs/sources_1/bd/riscv/ip/riscv_mig_7series_0_0_3/mig_a.prj"
#
# 3. The following remote source files that were added to the original project:-
#
#    "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/sdc/axi_sd_fifo.v"
#    "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/sdc/axi_sd_fifo_filler.v"
#    "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/sdc/sd_defines.h"
#    "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/sdc/sd_cmd_master.v"
#    "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/sdc/sd_cmd_serial_host.v"
#    "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/sdc/sd_data_master.v"
#    "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/sdc/sd_data_serial_host.v"
#    "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/sdc/sd_data_xfer_trig.v"
#    "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/sdc/axi_sdc_controller.v"
#    "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/ethernet/verilog-ethernet/lib/axis/rtl/axis_adapter.v"
#    "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/ethernet/verilog-ethernet/lib/axis/rtl/axis_async_fifo.v"
#    "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/ethernet/verilog-ethernet/lib/axis/rtl/axis_async_fifo_adapter.v"
#    "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/ethernet/verilog-ethernet/rtl/axis_gmii_rx.v"
#    "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/ethernet/verilog-ethernet/rtl/axis_gmii_tx.v"
#    "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_mac_1g.v"
#    "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_mac_1g_fifo.v"
#    "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/board/zc706/ethernet-zc706.v"
#    "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/ethernet/ethernet.v"
#    "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/board/fan-control.v"
#    "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/ethernet/verilog-ethernet/rtl/lfsr.v"
#    "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/board/mem-reset-control.v"
#    "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/workspace/rocket64b1/srams.v"
#    "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/workspace/rocket64b1/system-zc706.v"
#    "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/uart/uart.v"
#    "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/vhdl-wrapper/src/net/largest/riscv/vhdl/bscan2jtag.vhdl"
#    "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/workspace/rocket64b1/rocket.vhdl"
#    "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/board/zc706/top.xdc"
#    "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/board/zc706/sdc.xdc"
#    "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/board/zc706/uart.xdc"
#    "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/board/zc706/ethernet.xdc"
#    "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/board/timing-constraints.tcl"
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
   "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/workspace/rocket64b1/vivado-zc706-riscv/zc706-riscv.srcs/sources_1/bd/riscv/ip/riscv_mig_7series_0_0_3/mig_a.prj" \
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find local file $ifile "
      set status false
    }
  }

  set files [list \
   "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/sdc/axi_sd_fifo.v" \
   "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/sdc/axi_sd_fifo_filler.v" \
   "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/sdc/sd_defines.h" \
   "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/sdc/sd_cmd_master.v" \
   "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/sdc/sd_cmd_serial_host.v" \
   "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/sdc/sd_data_master.v" \
   "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/sdc/sd_data_serial_host.v" \
   "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/sdc/sd_data_xfer_trig.v" \
   "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/sdc/axi_sdc_controller.v" \
   "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/ethernet/verilog-ethernet/lib/axis/rtl/axis_adapter.v" \
   "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/ethernet/verilog-ethernet/lib/axis/rtl/axis_async_fifo.v" \
   "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/ethernet/verilog-ethernet/lib/axis/rtl/axis_async_fifo_adapter.v" \
   "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/ethernet/verilog-ethernet/rtl/axis_gmii_rx.v" \
   "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/ethernet/verilog-ethernet/rtl/axis_gmii_tx.v" \
   "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_mac_1g.v" \
   "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_mac_1g_fifo.v" \
   "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/board/zc706/ethernet-zc706.v" \
   "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/ethernet/ethernet.v" \
   "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/board/fan-control.v" \
   "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/ethernet/verilog-ethernet/rtl/lfsr.v" \
   "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/board/mem-reset-control.v" \
   "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/workspace/rocket64b1/srams.v" \
   "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/workspace/rocket64b1/system-zc706.v" \
   "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/uart/uart.v" \
   "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/vhdl-wrapper/src/net/largest/riscv/vhdl/bscan2jtag.vhdl" \
   "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/workspace/rocket64b1/rocket.vhdl" \
   "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/board/zc706/top.xdc" \
   "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/board/zc706/sdc.xdc" \
   "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/board/zc706/uart.xdc" \
   "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/board/zc706/ethernet.xdc" \
   "/media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/board/timing-constraints.tcl" \
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find remote file $ifile "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "zc706-riscv"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "zc706-riscv.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/workspace/rocket64b1/vivado-zc706-riscv"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7z045ffg900-2

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "board_part" -value "xilinx.com:zc706:part0:1.4" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "platform.board_id" -value "zc706" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/sdc/axi_sd_fifo.v"] \
 [file normalize "${origin_dir}/sdc/axi_sd_fifo_filler.v"] \
 [file normalize "${origin_dir}/sdc/sd_defines.h"] \
 [file normalize "${origin_dir}/sdc/sd_cmd_master.v"] \
 [file normalize "${origin_dir}/sdc/sd_cmd_serial_host.v"] \
 [file normalize "${origin_dir}/sdc/sd_data_master.v"] \
 [file normalize "${origin_dir}/sdc/sd_data_serial_host.v"] \
 [file normalize "${origin_dir}/sdc/sd_data_xfer_trig.v"] \
 [file normalize "${origin_dir}/sdc/axi_sdc_controller.v"] \
 [file normalize "${origin_dir}/ethernet/verilog-ethernet/lib/axis/rtl/axis_adapter.v"] \
 [file normalize "${origin_dir}/ethernet/verilog-ethernet/lib/axis/rtl/axis_async_fifo.v"] \
 [file normalize "${origin_dir}/ethernet/verilog-ethernet/lib/axis/rtl/axis_async_fifo_adapter.v"] \
 [file normalize "${origin_dir}/ethernet/verilog-ethernet/rtl/axis_gmii_rx.v"] \
 [file normalize "${origin_dir}/ethernet/verilog-ethernet/rtl/axis_gmii_tx.v"] \
 [file normalize "${origin_dir}/ethernet/verilog-ethernet/rtl/eth_mac_1g.v"] \
 [file normalize "${origin_dir}/ethernet/verilog-ethernet/rtl/eth_mac_1g_fifo.v"] \
 [file normalize "${origin_dir}/board/zc706/ethernet-zc706.v"] \
 [file normalize "${origin_dir}/ethernet/ethernet.v"] \
 [file normalize "${origin_dir}/board/fan-control.v"] \
 [file normalize "${origin_dir}/ethernet/verilog-ethernet/rtl/lfsr.v"] \
 [file normalize "${origin_dir}/board/mem-reset-control.v"] \
 [file normalize "${origin_dir}/workspace/rocket64b1/srams.v"] \
 [file normalize "${origin_dir}/workspace/rocket64b1/system-zc706.v"] \
 [file normalize "${origin_dir}/uart/uart.v"] \
 [file normalize "${origin_dir}/vhdl-wrapper/src/net/largest/riscv/vhdl/bscan2jtag.vhdl"] \
 [file normalize "${origin_dir}/workspace/rocket64b1/rocket.vhdl"] \
]
add_files -norecurse -fileset $obj $files

# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/workspace/rocket64b1/vivado-zc706-riscv/zc706-riscv.srcs/sources_1/bd/riscv/ip/riscv_mig_7series_0_0_3/mig_a.prj" ]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/sdc/sd_defines.h"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/vhdl-wrapper/src/net/largest/riscv/vhdl/bscan2jtag.vhdl"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/workspace/rocket64b1/rocket.vhdl"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj


# Set 'sources_1' fileset file properties for local files
set file "riscv_mig_7series_0_0_3/mig_a.prj"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "scoped_to_cells" -value "riscv_mig_7series_0_0" -objects $file_obj


# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "sdc_controller" -objects $obj
set_property -name "top_file" -value "sdc/axi_sdc_controller.v" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/board/zc706/top.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/board/zc706/top.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "used_in" -value "implementation" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/board/zc706/sdc.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/board/zc706/sdc.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "used_in" -value "implementation" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/board/zc706/uart.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/board/zc706/uart.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "used_in" -value "implementation" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/board/zc706/ethernet.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/board/zc706/ethernet.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "used_in" -value "implementation" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/board/timing-constraints.tcl"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/board/timing-constraints.tcl"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "TCL" -objects $file_obj
set_property -name "used_in" -value "implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "hbs.configure_design_for_hier_access" -value "1" -objects $obj
set_property -name "top" -value "sdc_controller" -objects $obj
set_property -name "top_file" -value "sdc/axi_sdc_controller.v" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added
if { [get_files mem-reset-control.v] == "" } {
  import_files -quiet -fileset sources_1 /media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/board/mem-reset-control.v
}
if { [get_files rocket.vhdl] == "" } {
  import_files -quiet -fileset sources_1 /media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/workspace/rocket64b1/rocket.vhdl
}
if { [get_files axi_sd_fifo.v] == "" } {
  import_files -quiet -fileset sources_1 /media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/sdc/axi_sd_fifo.v
}
if { [get_files axi_sd_fifo_filler.v] == "" } {
  import_files -quiet -fileset sources_1 /media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/sdc/axi_sd_fifo_filler.v
}
if { [get_files sd_defines.h] == "" } {
  import_files -quiet -fileset sources_1 /media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/sdc/sd_defines.h
}
if { [get_files sd_cmd_master.v] == "" } {
  import_files -quiet -fileset sources_1 /media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/sdc/sd_cmd_master.v
}
if { [get_files sd_cmd_serial_host.v] == "" } {
  import_files -quiet -fileset sources_1 /media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/sdc/sd_cmd_serial_host.v
}
if { [get_files sd_data_master.v] == "" } {
  import_files -quiet -fileset sources_1 /media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/sdc/sd_data_master.v
}
if { [get_files sd_data_serial_host.v] == "" } {
  import_files -quiet -fileset sources_1 /media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/sdc/sd_data_serial_host.v
}
if { [get_files sd_data_xfer_trig.v] == "" } {
  import_files -quiet -fileset sources_1 /media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/sdc/sd_data_xfer_trig.v
}
if { [get_files axi_sdc_controller.v] == "" } {
  import_files -quiet -fileset sources_1 /media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/sdc/axi_sdc_controller.v
}
if { [get_files uart.v] == "" } {
  import_files -quiet -fileset sources_1 /media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/uart/uart.v
}
if { [get_files srams.v] == "" } {
  import_files -quiet -fileset sources_1 /media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/workspace/rocket64b1/srams.v
}
if { [get_files system-zc706.v] == "" } {
  import_files -quiet -fileset sources_1 /media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/workspace/rocket64b1/system-zc706.v
}
if { [get_files rocket.vhdl] == "" } {
  import_files -quiet -fileset sources_1 /media/alexander/d3ae9cdf-117f-46f9-a1ce-288340d1b2be/vivado-risc-v/workspace/rocket64b1/rocket.vhdl
}


# Proc to create BD riscv
proc cr_bd_riscv { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# Rocket64b1, synchronizer, mem_reset_control, sdc_controller, uart



  # CHANGE DESIGN NAME HERE
  set design_name riscv

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:clk_wiz:6.0\
  xilinx.com:ip:util_ds_buf:2.1\
  xilinx.com:ip:smartconnect:1.0\
  xilinx.com:ip:mig_7series:4.2\
  xilinx.com:ip:xadc_wiz:3.3\
  xilinx.com:ip:xlconcat:2.1\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  Rocket64b1\
  synchronizer\
  mem_reset_control\
  sdc_controller\
  uart\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }


##################################################################
# MIG PRJ FILE TCL PROCs
##################################################################

proc write_mig_file_riscv_mig_7series_0_0 { str_mig_prj_filepath } {

   file mkdir [ file dirname "$str_mig_prj_filepath" ]
   set mig_prj_file [open $str_mig_prj_filepath  w+]

   puts $mig_prj_file {﻿<?xml version="1.0" encoding="UTF-8" standalone="no" ?>}
   puts $mig_prj_file {<Project NoOfControllers="1">}
   puts $mig_prj_file {  }
   puts $mig_prj_file {<!-- IMPORTANT: This is an internal file that has been generated by the MIG software. Any direct editing or changes made to this file may result in unpredictable behavior or data corruption. It is strongly advised that users do not edit the contents of this file. Re-run the MIG GUI with the required settings if any of the options provided below need to be altered. -->}
   puts $mig_prj_file {  <ModuleName>riscv_mig_7series_0_0</ModuleName>}
   puts $mig_prj_file {  <dci_inouts_inputs>1</dci_inouts_inputs>}
   puts $mig_prj_file {  <dci_inputs>1</dci_inputs>}
   puts $mig_prj_file {  <Debug_En>OFF</Debug_En>}
   puts $mig_prj_file {  <DataDepth_En>1024</DataDepth_En>}
   puts $mig_prj_file {  <LowPower_En>ON</LowPower_En>}
   puts $mig_prj_file {  <XADC_En>Disabled</XADC_En>}
   puts $mig_prj_file {  <TargetFPGA>xc7z045-ffg900/-2</TargetFPGA>}
   puts $mig_prj_file {  <Version>4.2</Version>}
   puts $mig_prj_file {  <SystemClock>No Buffer</SystemClock>}
   puts $mig_prj_file {  <ReferenceClock>No Buffer</ReferenceClock>}
   puts $mig_prj_file {  <SysResetPolarity>ACTIVE HIGH</SysResetPolarity>}
   puts $mig_prj_file {  <BankSelectionFlag>TRUE</BankSelectionFlag>}
   puts $mig_prj_file {  <InternalVref>0</InternalVref>}
   puts $mig_prj_file {  <dci_hr_inouts_inputs>50 Ohms</dci_hr_inouts_inputs>}
   puts $mig_prj_file {  <dci_cascade>1</dci_cascade>}
   puts $mig_prj_file {  <Controller number="0">}
   puts $mig_prj_file {    <MemoryDevice>DDR3_SDRAM/SODIMMs/MT8JTF12864HZ-1G6</MemoryDevice>}
   puts $mig_prj_file {    <TimePeriod>1250</TimePeriod>}
   puts $mig_prj_file {    <VccAuxIO>2.0V</VccAuxIO>}
   puts $mig_prj_file {    <PHYRatio>4:1</PHYRatio>}
   puts $mig_prj_file {    <InputClkFreq>800</InputClkFreq>}
   puts $mig_prj_file {    <UIExtraClocks>0</UIExtraClocks>}
   puts $mig_prj_file {    <MMCM_VCO>800</MMCM_VCO>}
   puts $mig_prj_file {    <MMCMClkOut0> 1.000</MMCMClkOut0>}
   puts $mig_prj_file {    <MMCMClkOut1>1</MMCMClkOut1>}
   puts $mig_prj_file {    <MMCMClkOut2>1</MMCMClkOut2>}
   puts $mig_prj_file {    <MMCMClkOut3>1</MMCMClkOut3>}
   puts $mig_prj_file {    <MMCMClkOut4>1</MMCMClkOut4>}
   puts $mig_prj_file {    <DataWidth>64</DataWidth>}
   puts $mig_prj_file {    <DeepMemory>1</DeepMemory>}
   puts $mig_prj_file {    <DataMask>1</DataMask>}
   puts $mig_prj_file {    <ECC>Disabled</ECC>}
   puts $mig_prj_file {    <Ordering>Normal</Ordering>}
   puts $mig_prj_file {    <BankMachineCnt>4</BankMachineCnt>}
   puts $mig_prj_file {    <CustomPart>FALSE</CustomPart>}
   puts $mig_prj_file {    <NewPartName/>}
   puts $mig_prj_file {    <RowAddress>14</RowAddress>}
   puts $mig_prj_file {    <ColAddress>10</ColAddress>}
   puts $mig_prj_file {    <BankAddress>3</BankAddress>}
   puts $mig_prj_file {    <MemoryVoltage>1.5V</MemoryVoltage>}
   puts $mig_prj_file {    <C0_MEM_SIZE>1073741824</C0_MEM_SIZE>}
   puts $mig_prj_file {    <UserMemoryAddressMap>BANK_ROW_COLUMN</UserMemoryAddressMap>}
   puts $mig_prj_file {    <BankSelection>}
   puts $mig_prj_file {      <Bank T0="DQ[0-7]" T1="DQ[8-15]" T2="DQ[16-23]" T3="DQ[24-31]" name="35"/>}
   puts $mig_prj_file {      <Bank T1="Address/Ctrl-0" T2="Address/Ctrl-2" T3="Address/Ctrl-1" name="34"/>}
   puts $mig_prj_file {      <Bank T0="DQ[32-39]" T1="DQ[40-47]" T2="DQ[48-55]" T3="DQ[56-63]" name="33"/>}
   puts $mig_prj_file {    </BankSelection>}
   puts $mig_prj_file {    <System_Control>}
   puts $mig_prj_file {      <Pin Bank="Select Bank" PADName="No connect" name="sys_rst"/>}
   puts $mig_prj_file {      <Pin Bank="Select Bank" PADName="No connect" name="init_calib_complete"/>}
   puts $mig_prj_file {      <Pin Bank="Select Bank" PADName="No connect" name="tg_compare_error"/>}
   puts $mig_prj_file {    </System_Control>}
   puts $mig_prj_file {    <TimingParameters>}
   puts $mig_prj_file {      <Parameters tcke="5" tfaw="30" tras="35" trcd="13.75" trefi="7.8" trfc="110" trp="13.75" trrd="6" trtp="7.5" twtr="7.5"/>}
   puts $mig_prj_file {    </TimingParameters>}
   puts $mig_prj_file {    <mrBurstLength name="Burst Length">8 - Fixed</mrBurstLength>}
   puts $mig_prj_file {    <mrBurstType name="Read Burst Type and Length">Sequential</mrBurstType>}
   puts $mig_prj_file {    <mrCasLatency name="CAS Latency">11</mrCasLatency>}
   puts $mig_prj_file {    <mrMode name="Mode">Normal</mrMode>}
   puts $mig_prj_file {    <mrDllReset name="DLL Reset">No</mrDllReset>}
   puts $mig_prj_file {    <mrPdMode name="DLL control for precharge PD">Slow Exit</mrPdMode>}
   puts $mig_prj_file {    <emrDllEnable name="DLL Enable">Enable</emrDllEnable>}
   puts $mig_prj_file {    <emrOutputDriveStrength name="Output Driver Impedance Control">RZQ/6</emrOutputDriveStrength>}
   puts $mig_prj_file {    <emrMirrorSelection name="Address Mirroring">Disable</emrMirrorSelection>}
   puts $mig_prj_file {    <emrCSSelection name="Controller Chip Select Pin">Enable</emrCSSelection>}
   puts $mig_prj_file {    <emrRTT name="RTT (nominal) - On Die Termination (ODT)">RZQ/4</emrRTT>}
   puts $mig_prj_file {    <emrPosted name="Additive Latency (AL)">0</emrPosted>}
   puts $mig_prj_file {    <emrOCD name="Write Leveling Enable">Disabled</emrOCD>}
   puts $mig_prj_file {    <emrDQS name="TDQS enable">Enabled</emrDQS>}
   puts $mig_prj_file {    <emrRDQS name="Qoff">Output Buffer Enabled</emrRDQS>}
   puts $mig_prj_file {    <mr2PartialArraySelfRefresh name="Partial-Array Self Refresh">Full Array</mr2PartialArraySelfRefresh>}
   puts $mig_prj_file {    <mr2CasWriteLatency name="CAS write latency">8</mr2CasWriteLatency>}
   puts $mig_prj_file {    <mr2AutoSelfRefresh name="Auto Self Refresh">Enabled</mr2AutoSelfRefresh>}
   puts $mig_prj_file {    <mr2SelfRefreshTempRange name="High Temparature Self Refresh Rate">Normal</mr2SelfRefreshTempRange>}
   puts $mig_prj_file {    <mr2RTTWR name="RTT_WR - Dynamic On Die Termination (ODT)">Dynamic ODT off</mr2RTTWR>}
   puts $mig_prj_file {    <PortInterface>AXI</PortInterface>}
   puts $mig_prj_file {    <AXIParameters>}
   puts $mig_prj_file {      <C0_C_RD_WR_ARB_ALGORITHM>RD_PRI_REG</C0_C_RD_WR_ARB_ALGORITHM>}
   puts $mig_prj_file {      <C0_S_AXI_ADDR_WIDTH>30</C0_S_AXI_ADDR_WIDTH>}
   puts $mig_prj_file {      <C0_S_AXI_DATA_WIDTH>512</C0_S_AXI_DATA_WIDTH>}
   puts $mig_prj_file {      <C0_S_AXI_ID_WIDTH>4</C0_S_AXI_ID_WIDTH>}
   puts $mig_prj_file {      <C0_S_AXI_SUPPORTS_NARROW_BURST>0</C0_S_AXI_SUPPORTS_NARROW_BURST>}
   puts $mig_prj_file {    </AXIParameters>}
   puts $mig_prj_file {  </Controller>}
   puts $mig_prj_file {</Project>}

   close $mig_prj_file
}
# End of write_mig_file_riscv_mig_7series_0_0()



  
# Hierarchical cell: IO
proc create_hier_cell_IO { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_IO() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M00_AXI

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S00_AXI

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:uart_rtl:1.0 uart


  # Create pins
  create_bd_pin -dir I -type clk axi_clock
  create_bd_pin -dir I -type rst axi_reset
  create_bd_pin -dir I -type clk clock_100MHz
  create_bd_pin -dir I -type clk clock_200MHz
  create_bd_pin -dir O -from 11 -to 0 device_temp
  create_bd_pin -dir O fan_en
  create_bd_pin -dir O -from 7 -to 0 interrupts
  create_bd_pin -dir I sdio_cd
  create_bd_pin -dir O -type clk sdio_clk
  create_bd_pin -dir IO sdio_cmd
  create_bd_pin -dir IO -from 3 -to 0 sdio_dat

  # Create instance: SD, and set properties
  set block_name sdc_controller
  set block_cell_name SD
  if { [catch {set SD [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $SD eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.capabilies_reg {0x0001} \
 ] $SD

  # Create instance: UART, and set properties
  set block_name uart
  set block_cell_name UART
  if { [catch {set UART [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $UART eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: XADC, and set properties
  set XADC [ create_bd_cell -type ip -vlnv xilinx.com:ip:xadc_wiz:3.3 XADC ]
  set_property -dict [ list \
   CONFIG.ADC_OFFSET_AND_GAIN_CALIBRATION {true} \
   CONFIG.ADC_OFFSET_CALIBRATION {true} \
   CONFIG.CHANNEL_ENABLE_VBRAM {true} \
   CONFIG.CHANNEL_ENABLE_VCCAUX {true} \
   CONFIG.CHANNEL_ENABLE_VCCINT {true} \
   CONFIG.CHANNEL_ENABLE_VP_VN {true} \
   CONFIG.ENABLE_TEMP_BUS {true} \
   CONFIG.SENSOR_OFFSET_AND_GAIN_CALIBRATION {true} \
   CONFIG.SENSOR_OFFSET_CALIBRATION {true} \
   CONFIG.SEQUENCER_MODE {Continuous} \
   CONFIG.TEMPERATURE_ALARM_RESET {50} \
   CONFIG.TEMPERATURE_ALARM_TRIGGER {60} \
   CONFIG.VCCAUX_ALARM {false} \
   CONFIG.VCCINT_ALARM {false} \
   CONFIG.XADC_STARUP_SELECTION {channel_sequencer} \
 ] $XADC

  # Create instance: io_axi_m, and set properties
  set io_axi_m [ create_bd_cell -type ip -vlnv xilinx.com:ip:smartconnect:1.0 io_axi_m ]
  set_property -dict [ list \
   CONFIG.NUM_CLKS {3} \
   CONFIG.NUM_MI {1} \
   CONFIG.NUM_SI {2} \
 ] $io_axi_m

  # Create instance: io_axi_s, and set properties
  set io_axi_s [ create_bd_cell -type ip -vlnv xilinx.com:ip:smartconnect:1.0 io_axi_s ]
  set_property -dict [ list \
   CONFIG.NUM_CLKS {3} \
   CONFIG.NUM_MI {4} \
   CONFIG.NUM_SI {1} \
 ] $io_axi_s

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {8} \
 ] $xlconcat_0

  # Create interface connections
  connect_bd_intf_net -intf_net UART_RS232 [get_bd_intf_pins uart] [get_bd_intf_pins UART/RS232]
  connect_bd_intf_net -intf_net io_axi_m [get_bd_intf_pins M00_AXI] [get_bd_intf_pins io_axi_m/M00_AXI]
  connect_bd_intf_net -intf_net io_axi_s [get_bd_intf_pins S00_AXI] [get_bd_intf_pins io_axi_s/S00_AXI]
  connect_bd_intf_net -intf_net io_axi_s_M00_AXI [get_bd_intf_pins UART/S_AXI_LITE] [get_bd_intf_pins io_axi_s/M00_AXI]
  connect_bd_intf_net -intf_net io_axi_s_M01_AXI [get_bd_intf_pins SD/S_AXI_LITE] [get_bd_intf_pins io_axi_s/M01_AXI]
  connect_bd_intf_net -intf_net io_axi_s_M03_AXI [get_bd_intf_pins XADC/s_axi_lite] [get_bd_intf_pins io_axi_s/M03_AXI]
  connect_bd_intf_net -intf_net sd_axi_m [get_bd_intf_pins SD/M_AXI] [get_bd_intf_pins io_axi_m/S00_AXI]

  # Create port connections
  connect_bd_net -net AXI_clock [get_bd_pins axi_clock] [get_bd_pins XADC/s_axi_aclk] [get_bd_pins io_axi_m/aclk] [get_bd_pins io_axi_s/aclk]
  connect_bd_net -net SD_interrupt [get_bd_pins SD/interrupt] [get_bd_pins xlconcat_0/In1]
  connect_bd_net -net SD_sdio_cd [get_bd_pins sdio_cd] [get_bd_pins SD/sdio_cd]
  connect_bd_net -net SD_sdio_clk [get_bd_pins sdio_clk] [get_bd_pins SD/sdio_clk]
  connect_bd_net -net SD_sdio_cmd [get_bd_pins sdio_cmd] [get_bd_pins SD/sdio_cmd]
  connect_bd_net -net SD_sdio_dat [get_bd_pins sdio_dat] [get_bd_pins SD/sdio_dat]
  connect_bd_net -net UART_interrupt [get_bd_pins UART/interrupt] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net axi_reset_1 [get_bd_pins axi_reset] [get_bd_pins UART/async_resetn] [get_bd_pins XADC/s_axi_aresetn] [get_bd_pins io_axi_m/aresetn] [get_bd_pins io_axi_s/aresetn]
  connect_bd_net -net clock_100MHz [get_bd_pins clock_100MHz] [get_bd_pins SD/clock] [get_bd_pins UART/clock] [get_bd_pins io_axi_m/aclk1] [get_bd_pins io_axi_s/aclk1]
  connect_bd_net -net clock_200MHz_1 [get_bd_pins clock_200MHz] [get_bd_pins io_axi_m/aclk2] [get_bd_pins io_axi_s/aclk2]
  connect_bd_net -net device_temp [get_bd_pins device_temp] [get_bd_pins XADC/temp_out]
  connect_bd_net -net fan_en [get_bd_pins fan_en] [get_bd_pins XADC/user_temp_alarm_out]
  connect_bd_net -net interrupts [get_bd_pins interrupts] [get_bd_pins xlconcat_0/dout]

  # Perform GUI Layout
  regenerate_bd_layout -hierarchy [get_bd_cells /IO] -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"0.87953",
   "Default View_TopLeft":"-181,351",
   "ExpandedHierarchyInLayout":"",
   "guistr":"# # String gsaved with Nlview 7.0r4  2019-12-20 bk=1.5203 VDI=41 GEI=36 GUI=JA:10.0 TLS
#  -string -flagsOSRD
preplace port M00_AXI -pg 1 -lvl 4 -x 1000 -y 420 -defaultsOSRD
preplace port S00_AXI -pg 1 -lvl 0 -x -30 -y 560 -defaultsOSRD
preplace port uart -pg 1 -lvl 4 -x 1000 -y 580 -defaultsOSRD
preplace port axi_clock -pg 1 -lvl 0 -x -30 -y 580 -defaultsOSRD
preplace port axi_reset -pg 1 -lvl 0 -x -30 -y 20 -defaultsOSRD
preplace port clock_100MHz -pg 1 -lvl 0 -x -30 -y 620 -defaultsOSRD
preplace port clock_200MHz -pg 1 -lvl 0 -x -30 -y 40 -defaultsOSRD
preplace port fan_en -pg 1 -lvl 4 -x 1000 -y 70 -defaultsOSRD
preplace port sdio_cd -pg 1 -lvl 0 -x -30 -y 730 -defaultsOSRD
preplace port sdio_clk -pg 1 -lvl 4 -x 1000 -y 710 -defaultsOSRD
preplace port sdio_cmd -pg 1 -lvl 4 -x 1000 -y 670 -defaultsOSRD
preplace portBus device_temp -pg 1 -lvl 4 -x 1000 -y 270 -defaultsOSRD
preplace portBus interrupts -pg 1 -lvl 4 -x 1000 -y 850 -defaultsOSRD
preplace portBus sdio_dat -pg 1 -lvl 4 -x 1000 -y 690 -defaultsOSRD
preplace inst SD -pg 1 -lvl 2 -x 460 -y 700 -defaultsOSRD
preplace inst UART -pg 1 -lvl 3 -x 820 -y 590 -defaultsOSRD
preplace inst XADC -pg 1 -lvl 3 -x 820 -y 160 -defaultsOSRD
preplace inst io_axi_m -pg 1 -lvl 3 -x 820 -y 420 -defaultsOSRD
preplace inst io_axi_s -pg 1 -lvl 1 -x 150 -y 600 -defaultsOSRD
preplace inst xlconcat_0 -pg 1 -lvl 3 -x 820 -y 850 -defaultsOSRD
preplace netloc AXI_clock 1 0 3 0 480 NJ 480 620
preplace netloc SD_interrupt 1 2 1 620 750n
preplace netloc SD_sdio_cd 1 0 2 NJ 730 NJ
preplace netloc SD_sdio_clk 1 2 2 NJ 710 NJ
preplace netloc SD_sdio_cmd 1 2 2 NJ 670 NJ
preplace netloc SD_sdio_dat 1 2 2 NJ 690 NJ
preplace netloc UART_interrupt 1 2 2 650 720 980
preplace netloc clock_100MHz 1 0 3 0 700 310 590 640
preplace netloc device_temp 1 3 1 NJ 270
preplace netloc fan_en 1 3 1 NJ 70
preplace netloc interrupts 1 3 1 NJ 850
preplace netloc clock_200MHz_1 1 0 3 -10 490 N 490 650
preplace netloc axi_reset_1 1 0 3 10 500 N 500 660
preplace netloc UART_RS232 1 3 1 NJ 580
preplace netloc io_axi_m 1 3 1 NJ 420
preplace netloc io_axi_s 1 0 1 NJ 560
preplace netloc io_axi_s_M00_AXI 1 1 2 NJ 570 N
preplace netloc io_axi_s_M01_AXI 1 1 1 300 590n
preplace netloc io_axi_s_M03_AXI 1 1 2 290J 470 610
preplace netloc sd_axi_m 1 2 1 630 370n
levelinfo -pg 1 -30 150 460 820 1000
pagesize -pg 1 -db -bbox -sgen -190 -10 1190 980
"
}

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: DDR
proc create_hier_cell_DDR { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_DDR() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:ddrx_rtl:1.0 DDR3_0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S00_AXI


  # Create pins
  create_bd_pin -dir I -type clk axi_clock
  create_bd_pin -dir I -type rst axi_reset
  create_bd_pin -dir I -type clk clock_200MHz
  create_bd_pin -dir I clock_ok
  create_bd_pin -dir I -from 11 -to 0 device_temp
  create_bd_pin -dir O mem_ok
  create_bd_pin -dir I -type rst sys_reset

  # Create instance: axi_smc_1, and set properties
  set axi_smc_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:smartconnect:1.0 axi_smc_1 ]
  set_property -dict [ list \
   CONFIG.NUM_CLKS {2} \
   CONFIG.NUM_SI {1} \
 ] $axi_smc_1

  # Create instance: mem_axi_reset_sync, and set properties
  set block_name synchronizer
  set block_cell_name mem_axi_reset_sync
  if { [catch {set mem_axi_reset_sync [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $mem_axi_reset_sync eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: mem_reset_control_0, and set properties
  set block_name mem_reset_control
  set block_cell_name mem_reset_control_0
  if { [catch {set mem_reset_control_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $mem_reset_control_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: mig_7series_0, and set properties
  set mig_7series_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:mig_7series:4.2 mig_7series_0 ]

  # Generate the PRJ File for MIG
  set str_mig_folder [get_property IP_DIR [ get_ips [ get_property CONFIG.Component_Name $mig_7series_0 ] ] ]
  set str_mig_file_name mig_a.prj
  set str_mig_file_path ${str_mig_folder}/${str_mig_file_name}

  write_mig_file_riscv_mig_7series_0_0 $str_mig_file_path

  set_property -dict [ list \
   CONFIG.BOARD_MIG_PARAM {Custom} \
   CONFIG.MIG_DONT_TOUCH_PARAM {Custom} \
   CONFIG.RESET_BOARD_INTERFACE {Custom} \
   CONFIG.XML_INPUT_FILE {mig_a.prj} \
 ] $mig_7series_0

  # Create interface connections
  connect_bd_intf_net -intf_net MEM_AXI4 [get_bd_intf_pins S00_AXI] [get_bd_intf_pins axi_smc_1/S00_AXI]
  connect_bd_intf_net -intf_net axi_smc_1_M00_AXI [get_bd_intf_pins axi_smc_1/M00_AXI] [get_bd_intf_pins mig_7series_0/S_AXI]
  connect_bd_intf_net -intf_net mig_7series_0_DDR3 [get_bd_intf_pins DDR3_0] [get_bd_intf_pins mig_7series_0/DDR3]

  # Create port connections
  connect_bd_net -net AXI_clock [get_bd_pins axi_clock] [get_bd_pins axi_smc_1/aclk] [get_bd_pins mig_7series_0/clk_ref_i]
  connect_bd_net -net AXI_reset [get_bd_pins axi_reset] [get_bd_pins axi_smc_1/aresetn] [get_bd_pins mem_axi_reset_sync/dinp]
  connect_bd_net -net clock_200MHz [get_bd_pins clock_200MHz] [get_bd_pins mem_reset_control_0/clock] [get_bd_pins mig_7series_0/sys_clk_i]
  connect_bd_net -net clock_ok [get_bd_pins clock_ok] [get_bd_pins mem_reset_control_0/clock_ok]
  connect_bd_net -net device_temp [get_bd_pins device_temp] [get_bd_pins mig_7series_0/device_temp_i]
  connect_bd_net -net mem_aresetn [get_bd_pins mem_axi_reset_sync/dout] [get_bd_pins mig_7series_0/aresetn]
  connect_bd_net -net mem_init_calib_complete [get_bd_pins mem_reset_control_0/calib_complete] [get_bd_pins mig_7series_0/init_calib_complete]
  connect_bd_net -net mem_mmcm_locked [get_bd_pins mem_reset_control_0/mmcm_locked] [get_bd_pins mig_7series_0/mmcm_locked]
  connect_bd_net -net mem_ok [get_bd_pins mem_ok] [get_bd_pins mem_reset_control_0/mem_ok]
  connect_bd_net -net mem_reset [get_bd_pins mem_reset_control_0/mem_reset] [get_bd_pins mig_7series_0/sys_rst]
  connect_bd_net -net mem_ui_clk [get_bd_pins axi_smc_1/aclk1] [get_bd_pins mem_axi_reset_sync/clock] [get_bd_pins mig_7series_0/ui_clk]
  connect_bd_net -net sys_reset [get_bd_pins sys_reset] [get_bd_pins mem_reset_control_0/sys_reset]

  # Perform GUI Layout
  regenerate_bd_layout -hierarchy [get_bd_cells /DDR] -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"1.0",
   "Default View_TopLeft":"-466,-20",
   "ExpandedHierarchyInLayout":"",
   "guistr":"# # String gsaved with Nlview 7.0r4  2019-12-20 bk=1.5203 VDI=41 GEI=36 GUI=JA:10.0 TLS
#  -string -flagsOSRD
preplace port DDR3_0 -pg 1 -lvl 2 -x 400 -y 20 -defaultsOSRD
preplace port S00_AXI -pg 1 -lvl 0 -x -130 -y 20 -defaultsOSRD
preplace port axi_clock -pg 1 -lvl 0 -x -130 -y 40 -defaultsOSRD
preplace port axi_reset -pg 1 -lvl 0 -x -130 -y 60 -defaultsOSRD
preplace port clock_200MHz -pg 1 -lvl 0 -x -130 -y 0 -defaultsOSRD
preplace port clock_ok -pg 1 -lvl 0 -x -130 -y 80 -defaultsOSRD
preplace port mem_ok -pg 1 -lvl 2 -x 400 -y 40 -defaultsOSRD
preplace port sys_reset -pg 1 -lvl 0 -x -130 -y 140 -defaultsOSRD
preplace portBus device_temp -pg 1 -lvl 0 -x -130 -y 120 -defaultsOSRD
preplace inst axi_smc_1 -pg 1 -lvl 1 -x 160 -y 80 -defaultsOSRD
preplace inst mem_reset_control_0 -pg 1 -lvl 1 -x 160 -y 570 -defaultsOSRD
preplace inst mig_7series_0 -pg 1 -lvl 1 -x 160 -y 380 -defaultsOSRD
preplace inst mem_axi_reset_sync -pg 1 -lvl 1 -x 160 -y 220 -defaultsOSRD
preplace netloc AXI_reset 1 0 1 -70 60n
preplace netloc AXI_clock 1 0 1 -80 40n
preplace netloc clock_200MHz 1 0 1 -60 0n
preplace netloc clock_ok 1 0 1 -100 80n
preplace netloc mem_ok 1 1 1 380 40n
preplace netloc mem_reset 1 0 2 -40 700 340
preplace netloc mem_aresetn 1 0 2 -20 670 360
preplace netloc mem_init_calib_complete 1 0 2 -10 680 330
preplace netloc mem_mmcm_locked 1 0 2 -30 690 350
preplace netloc mem_ui_clk 1 0 2 -50 710 370
preplace netloc device_temp 1 0 1 -90 120n
preplace netloc sys_reset 1 0 1 -110 140n
preplace netloc MEM_AXI4 1 0 1 -50 20n
preplace netloc axi_smc_1_M00_AXI 1 0 2 -40 -10 360
preplace netloc mig_7series_0_DDR3 1 1 1 370 20n
levelinfo -pg 1 -130 160 400
pagesize -pg 1 -db -bbox -sgen -320 -20 510 720
"
}

  # Restore current instance
  current_bd_instance $oldCurInst
}
  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set DDR3_0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:ddrx_rtl:1.0 DDR3_0 ]

  set rs232_uart [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:uart_rtl:1.0 rs232_uart ]

  set sgmii_mgt_clk [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 sgmii_mgt_clk ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {125000000} \
   ] $sgmii_mgt_clk

  set sys_diff_clock [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 sys_diff_clock ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {200000000} \
   ] $sys_diff_clock


  # Create ports
  set fan_en [ create_bd_port -dir O fan_en ]
  set reset [ create_bd_port -dir I -type rst reset ]
  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] $reset
  set sdio_cd [ create_bd_port -dir I sdio_cd ]
  set sdio_clk [ create_bd_port -dir O sdio_clk ]
  set sdio_cmd [ create_bd_port -dir IO sdio_cmd ]
  set sdio_dat [ create_bd_port -dir IO -from 3 -to 0 sdio_dat ]

  # Create instance: DDR
  create_hier_cell_DDR [current_bd_instance .] DDR

  # Create instance: IO
  create_hier_cell_IO [current_bd_instance .] IO

  # Create instance: RocketChip, and set properties
  set block_name Rocket64b1
  set block_cell_name RocketChip
  if { [catch {set RocketChip [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $RocketChip eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: clk_wiz_0, and set properties
  set clk_wiz_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz:6.0 clk_wiz_0 ]
  set_property -dict [ list \
   CONFIG.CLKOUT1_REQUESTED_OUT_FREQ {100.000} \
   CONFIG.CLKOUT2_REQUESTED_OUT_FREQ {200.000} \
   CONFIG.CLKOUT2_USED {true} \
   CONFIG.CLKOUT3_REQUESTED_OUT_FREQ {100.000} \
   CONFIG.CLKOUT3_USED {true} \
   CONFIG.CLK_IN1_BOARD_INTERFACE {Custom} \
   CONFIG.CLK_IN2_BOARD_INTERFACE {Custom} \
   CONFIG.MMCM_CLKIN1_PERIOD {5.000} \
   CONFIG.MMCM_CLKIN2_PERIOD {10.0} \
   CONFIG.NUM_OUT_CLKS {3} \
   CONFIG.PRIM_SOURCE {No_buffer} \
   CONFIG.RESET_BOARD_INTERFACE {Custom} \
   CONFIG.USE_PHASE_ALIGNMENT {false} \
   CONFIG.USE_RESET {false} \
 ] $clk_wiz_0

  # Create instance: sys_diff_clock_buf, and set properties
  set sys_diff_clock_buf [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.1 sys_diff_clock_buf ]

  # Create interface connections
  connect_bd_intf_net -intf_net IO_UART [get_bd_intf_ports rs232_uart] [get_bd_intf_pins IO/uart]
  connect_bd_intf_net -intf_net MEM_AXI4 [get_bd_intf_pins DDR/S00_AXI] [get_bd_intf_pins RocketChip/MEM_AXI4]
  connect_bd_intf_net -intf_net io_axi_m [get_bd_intf_pins IO/M00_AXI] [get_bd_intf_pins RocketChip/DMA_AXI4]
  connect_bd_intf_net -intf_net io_axi_s [get_bd_intf_pins IO/S00_AXI] [get_bd_intf_pins RocketChip/IO_AXI4]
  connect_bd_intf_net -intf_net mig_7series_0_DDR3 [get_bd_intf_ports DDR3_0] [get_bd_intf_pins DDR/DDR3_0]
  connect_bd_intf_net -intf_net sys_diff_clock [get_bd_intf_ports sys_diff_clock] [get_bd_intf_pins sys_diff_clock_buf/CLK_IN_D]

  # Create port connections
  connect_bd_net -net AXI_clock [get_bd_pins DDR/axi_clock] [get_bd_pins IO/axi_clock] [get_bd_pins RocketChip/clock] [get_bd_pins clk_wiz_0/clk_out1]
  connect_bd_net -net AXI_reset [get_bd_pins DDR/axi_reset] [get_bd_pins IO/axi_reset] [get_bd_pins RocketChip/aresetn]
  connect_bd_net -net IO_interrupts [get_bd_pins IO/interrupts] [get_bd_pins RocketChip/interrupts]
  connect_bd_net -net IO_sdio_cd [get_bd_ports sdio_cd] [get_bd_pins IO/sdio_cd]
  connect_bd_net -net IO_sdio_clk [get_bd_ports sdio_clk] [get_bd_pins IO/sdio_clk]
  connect_bd_net -net IO_sdio_cmd [get_bd_ports sdio_cmd] [get_bd_pins IO/sdio_cmd]
  connect_bd_net -net IO_sdio_dat [get_bd_ports sdio_dat] [get_bd_pins IO/sdio_dat]
  connect_bd_net -net clock_100MHz [get_bd_pins IO/clock_100MHz] [get_bd_pins clk_wiz_0/clk_out3]
  connect_bd_net -net clock_200MHz [get_bd_pins DDR/clock_200MHz] [get_bd_pins IO/clock_200MHz] [get_bd_pins clk_wiz_0/clk_out2]
  connect_bd_net -net clock_ok [get_bd_pins DDR/clock_ok] [get_bd_pins RocketChip/clock_ok] [get_bd_pins clk_wiz_0/locked]
  connect_bd_net -net device_temp [get_bd_pins DDR/device_temp] [get_bd_pins IO/device_temp]
  connect_bd_net -net fan_en [get_bd_ports fan_en] [get_bd_pins IO/fan_en]
  connect_bd_net -net mem_ok [get_bd_pins DDR/mem_ok] [get_bd_pins RocketChip/mem_ok]
  connect_bd_net -net sys_clock [get_bd_pins clk_wiz_0/clk_in1] [get_bd_pins sys_diff_clock_buf/IBUF_OUT]
  connect_bd_net -net sys_reset [get_bd_ports reset] [get_bd_pins DDR/sys_reset] [get_bd_pins RocketChip/sys_reset]

  # Create address segments
  assign_bd_address -offset 0x60000000 -range 0x00010000 -target_address_space [get_bd_addr_spaces RocketChip/IO_AXI4] [get_bd_addr_segs IO/SD/S_AXI_LITE/reg0] -force
  assign_bd_address -offset 0x60010000 -range 0x00010000 -target_address_space [get_bd_addr_spaces RocketChip/IO_AXI4] [get_bd_addr_segs IO/UART/S_AXI_LITE/reg0] -force
  assign_bd_address -offset 0x60030000 -range 0x00010000 -target_address_space [get_bd_addr_spaces RocketChip/IO_AXI4] [get_bd_addr_segs IO/XADC/s_axi_lite/Reg] -force
  assign_bd_address -offset 0x80000000 -range 0x40000000 -target_address_space [get_bd_addr_spaces RocketChip/MEM_AXI4] [get_bd_addr_segs DDR/mig_7series_0/memmap/memaddr] -force
  assign_bd_address -offset 0x00000000 -range 0x000100000000 -target_address_space [get_bd_addr_spaces IO/SD/M_AXI] [get_bd_addr_segs RocketChip/DMA_AXI4/reg0] -force

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"1.0",
   "Default View_TopLeft":"-281,-160",
   "ExpandedHierarchyInLayout":"/DDR",
   "guistr":"# # String gsaved with Nlview 7.0r4  2019-12-20 bk=1.5203 VDI=41 GEI=36 GUI=JA:10.0 TLS
#  -string -flagsOSRD
preplace port DDR3_0 -pg 1 -lvl 3 -x 1230 -y 20 -defaultsOSRD
preplace port rs232_uart -pg 1 -lvl 3 -x 1230 -y 60 -defaultsOSRD
preplace port sgmii_mgt_clk -pg 1 -lvl 0 -x -130 -y 60 -defaultsOSRD
preplace port sys_diff_clock -pg 1 -lvl 0 -x -130 -y 80 -defaultsOSRD
preplace port fan_en -pg 1 -lvl 3 -x 1230 -y 40 -defaultsOSRD
preplace port reset -pg 1 -lvl 0 -x -130 -y 20 -defaultsOSRD
preplace port sdio_cd -pg 1 -lvl 0 -x -130 -y 40 -defaultsOSRD
preplace port sdio_clk -pg 1 -lvl 3 -x 1230 -y 80 -defaultsOSRD
preplace port sdio_cmd -pg 1 -lvl 3 -x 1230 -y 100 -defaultsOSRD
preplace portBus sdio_dat -pg 1 -lvl 3 -x 1230 -y 120 -defaultsOSRD
preplace inst DDR -pg 1 -lvl 1 -x 320 -y 118 -defaultsOSRD
preplace inst IO -pg 1 -lvl 1 -x 320 -y 888 -defaultsOSRD
preplace inst RocketChip -pg 1 -lvl 1 -x 320 -y 1130 -defaultsOSRD
preplace inst clk_wiz_0 -pg 1 -lvl 2 -x 980 -y 0 -defaultsOSRD
preplace inst sys_diff_clock_buf -pg 1 -lvl 2 -x 980 -y 130 -defaultsOSRD
preplace inst DDR|axi_smc_1 -pg 1 -lvl 1 -x 410 -y 178 -defaultsOSRD
preplace inst DDR|mem_reset_control_0 -pg 1 -lvl 1 -x 410 -y 408 -defaultsOSRD
preplace inst DDR|mig_7series_0 -pg 1 -lvl 1 -x 410 -y 618 -defaultsOSRD
preplace inst DDR|mem_axi_reset_sync -pg 1 -lvl 1 -x 410 -y 38 -defaultsOSRD
preplace netloc clock_ok 1 0 3 -70 -140 NJ -140 1130
preplace netloc mem_ok 1 0 2 -20 1260 780
preplace netloc AXI_clock 1 0 3 -80 -150 NJ -150 1140
preplace netloc AXI_reset 1 0 2 -20 748 760
preplace netloc IO_interrupts 1 0 2 -40 758 740
preplace netloc IO_sdio_cd 1 0 1 -110 40n
preplace netloc IO_sdio_clk 1 1 2 N 918 1150J
preplace netloc IO_sdio_cmd 1 1 2 N 938 1170J
preplace netloc IO_sdio_dat 1 1 2 810 200 1160J
preplace netloc clock_100MHz 1 0 3 -60 -130 NJ -130 1150
preplace netloc clock_200MHz 1 0 3 -50 -120 NJ -120 1110
preplace netloc device_temp 1 0 2 -30 -82 750
preplace netloc fan_en 1 1 2 790 -110 1170J
preplace netloc sys_reset 1 0 1 -100 20n
preplace netloc sys_clock 1 1 2 810 -100 1120
preplace netloc IO_UART 1 1 2 800 190 1140J
preplace netloc MEM_AXI4 1 0 2 -20 -62 770
preplace netloc io_axi_m 1 0 2 -20 1008 730
preplace netloc io_axi_s 1 0 2 -30 1250 730
preplace netloc mig_7series_0_DDR3 1 1 2 780J -90 1160
preplace netloc sgmii_mgt_clk 1 0 1 N 60
preplace netloc sys_diff_clock 1 0 2 -90J -72 800
preplace netloc DDR|AXI_reset 1 0 1 180 48n
preplace netloc DDR|AXI_clock 1 0 1 200 168n
preplace netloc DDR|clock_200MHz 1 0 1 180 368n
preplace netloc DDR|clock_ok 1 0 1 N 388
preplace netloc DDR|mem_ok 1 1 1 610 418n
preplace netloc DDR|mem_reset 1 0 2 230 308 580
preplace netloc DDR|mem_aresetn 1 0 2 210 278 600
preplace netloc DDR|mem_init_calib_complete 1 0 2 240 508 580
preplace netloc DDR|mem_mmcm_locked 1 0 2 240 298 590
preplace netloc DDR|mem_ui_clk 1 0 2 240 288 600
preplace netloc DDR|device_temp 1 0 1 190 428n
preplace netloc DDR|sys_reset 1 0 1 N 448
preplace netloc DDR|MEM_AXI4 1 0 1 N 148
preplace netloc DDR|axi_smc_1_M00_AXI 1 0 2 220 268 580
preplace netloc DDR|mig_7series_0_DDR3 1 1 1 N 578
levelinfo -pg 1 -130 320 980 1230
levelinfo -hier DDR * 410 *
pagesize -pg 1 -db -bbox -sgen -290 -160 1380 1290
pagesize -hier DDR -db -bbox -sgen 150 -32 640 728
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_riscv()
cr_bd_riscv ""
set_property REGISTERED_WITH_MANAGER "1" [get_files riscv.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files riscv.bd ] 

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7z045ffg900-2 -flow {Vivado Synthesis 2020} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2020" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7z045ffg900-2 -flow {Vivado Implementation 2020} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2020" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
